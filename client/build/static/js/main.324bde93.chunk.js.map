{"version":3,"sources":["Components/Home/Carousel/Carousel.js","Components/Home/GenInfos/GenInfos.js","utils/utility.js","Components/UI/Input/Input.js","utils/service.js","Components/Home/EmergencyForm/EmergencyForm.js","Components/Home/Map/Map.js","Components/Home/Home.js","Components/Auth/Signup/Signup.js","utils/auth.js","Components/Auth/Login/Login.js","Components/Navbar/Navbar.js","Components/Footer/Footer.js","Components/UI/Checkbox/Checkbox.js","Components/UI/Dropdown/Dropdown.js","Components/UI/SearchField/SearchField.js","Components/Filters/Filters.js","Components/UI/Spinner/Spinner.js","Components/Users/UsersList/UsersList.js","Components/Users/EditUser/EditUser.js","Components/Users/UserDetails/UserDetails.js","Components/Users/AddUser/AddUser.js","Components/Pets/AddPet/AddPet.js","Components/Pets/PetsList/PetsList.js","Components/Pets/EditPet/EditPet.js","Components/Pets/PetDetails/PetDetails.js","App.js","reportWebVitals.js","index.js","Components/Users/EditUser/EditUser.module.css","Components/Pets/EditPet/EditPet.module.css","Components/Home/GenInfos/GenInfos.module.css","Components/Users/UserDetails/UserDetails.module.css","Components/UI/Input/Input.module.css","Components/Home/Map/Map.module.css","Components/Users/UsersList/UserList.module.css","Components/Pets/PetsList/PetsList.module.css","Components/Pets/PetDetails/PetDetails.module.css","Components/Home/EmergencyForm/EmergencyForm.module.css","Components/Auth/Signup/Signup.module.css","Components/Navbar/Navbar.module.css","Components/Auth/Login/Login.module.css","Components/Users/AddUser/AddUser.module.css","Components/Pets/AddPet/AddPet.module.css","Components/Home/Home.module.css","Components/Home/Carousel/Carousel.module.css","Components/Footer/Footer.module.css","Components/Filters/Filters.module.css","Components/UI/Spinner/Spinner.module.css"],"names":["Carousel","className","style","data-interval","Item","src","alt","GenInfos","Container","Box","href","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","console","log","Input","props","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","push","Invalid","validationError","elementConfig","placeholder","toLowerCase","elementType","join","onChange","changed","width","options","map","option","displayValue","service","axios","create","baseURL","errorHandler","err","theFile","post","then","res","data","catch","newThing","EmergencyForm","useState","message","formIsValid","imageUrl","form","setForm","id","Form","onSubmit","event","preventDefault","description","image","user","_id","key","encType","name","rows","cols","target","type","e","files","uploadData","FormData","append","response","secure_url","handleFileUpload","color","padding","Button","Map","infos","Home","Signup","setMessage","validation","valid","lastName","email","password","confirm","street","zipCode","city","state","phoneNumber","setFormIsValid","formElementsArray","formElement","config","displayedForm","inputId","updatedFormElement","updatedForm","validForm","handleChange","userCredentials","formControl","setUser","history","to","Login","minLenght","FormControl","marginRight","controlName","inline","display","InputGroup","maxHeight","fontSize","Navbar","isEmployee","justifyContent","alignItems","marginLeft","onClick","delete","Footer","Checkbox","checked","htmlFor","label","Dropdown","margin","userRoleOptions","SearchField","Filters","flexDirection","marginBottom","isDog","isCat","isBird","isRodent","isReptile","isOther","spinner","classes","Loader","UsersList","usersList","setUsersList","searchField","setSearchField","selectedRole","setSelectedRole","setIsDog","setIsCat","setIsBird","setIsReptile","setIsOther","useEffect","get","users","displayUsers","filter","element","includes","role","resultCard","pets","pet","specie","paddingRight","Spinner","editUser","handleSubmit","selectedUserForm","address","buttons","toggleEditForm","UserDetails","setError","editForm","setEditForm","setSelectedUserForm","fetchData","a","match","params","status","error","deleteUser","EditUser","put","goBack","Card","AddButton","Infos","position","createdAt","breed","AddUser","unique","fontWeight","AddPet","age","diagnosis","treatment","owner","url","location","pathname","split","toString","inputs","PetsList","petsList","setPetsList","setIsRodent","editPet","selectedPet","PetDetails","setSelectedPet","deletePet","EditPet","height","App","render","exact","path","component","selectedUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.324bde93.chunk.js","sourcesContent":["import React from 'react';\nimport style from './Carousel.module.css';\nimport { Carousel as CarouselBootstrap } from 'react-bootstrap';\nconst Carousel = () => {\n    return (\n        <CarouselBootstrap className={style.Carousel} data-interval=\"10000\">\n            <CarouselBootstrap.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"./images/pets.png\"\n                    alt=\"Pets\"\n                />\n                {/* <CarouselBootstrap.Caption></CarouselBootstrap.Caption> */}\n            </CarouselBootstrap.Item>\n            <CarouselBootstrap.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"./images/clinic-front.png\"\n                    alt=\"Clinic front\"\n                />\n\n                {/* <CarouselBootstrap.Caption></CarouselBootstrap.Caption> */}\n            </CarouselBootstrap.Item>\n            <CarouselBootstrap.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"./images/op-room.png\"\n                    alt=\"op-room\"\n                />\n\n                {/* <CarouselBootstrap.Caption></CarouselBootstrap.Caption> */}\n            </CarouselBootstrap.Item>\n        </CarouselBootstrap>\n    );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport style from './GenInfos.module.css';\n\nconst GenInfos = () => {\n    return (\n        <section className={style.Container}>\n            <article className={style.Box}>\n                <img src=\"/images/services.png\" alt=\"services\" />\n                <h3> Services </h3>\n                <p className=\"text\"> Check out our at home sevices </p>\n                <a className=\"link-btn\" href=\"#\">\n                    More{' '}\n                </a>\n            </article>\n\n            <article className={style.Box}>\n                <img src=\"/images/team.png\" alt=\"team\" />\n                <h3> Team </h3>\n                <p className=\"text\">\n                    {' '}\n                    Find out more about our specialized team.{' '}\n                </p>\n                <a className=\"link-btn\" href=\"#\">\n                    More{' '}\n                </a>\n            </article>\n\n            <article className={style.Box}>\n                <img src=\"/images/news.png\" alt=\"news\" />\n                <h3> News </h3>\n                <p className=\"text\"> All the news about pets. </p>\n                <a className=\"link-btn\" href=\"#\">\n                    {' '}\n                    More{' '}\n                </a>\n            </article>\n        </section>\n    );\n};\n\nexport default GenInfos;\n","import { useState, useEffect } from 'react';\nexport const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties,\n    };\n};\n\nexport const useLocalStorage = (key, defaultValue = '') => {\n    const [state, setState] = useState(\n        () => window.localStorage.getItem(key) || defaultValue\n    );\n    useEffect(() => {\n        window.localStorage.setItem(key, state);\n    }, [key, state]);\n    return [state, setState];\n};\n\nexport const checkValidity = (value, rules) => {\n    // I add isValid var to be able to check more rules at the same time\n    // otherwise the last rule's value would set the whole validation\n    let isValid = true;\n\n    if (!rules) {\n        return true;\n    }\n\n    if (rules.required === 'true') {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid;\n    }\n    console.log('isValid', isValid);\n    return isValid;\n};\n","import React from 'react';\n\nimport style from './Input.module.css';\n\nconst Input = (props) => {\n    let inputElement = null;\n    const inputClasses = [style.InputElement];\n\n    // if (props.elementConfig.type === 'textarea') {\n    //     inputClasses.push(style.Textarea);\n    // }\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(style.Invalid);\n    }\n\n    let validationError = null;\n    if (props.invalid && props.touched) {\n        validationError = (\n            <p>\n                Please enter a valid{' '}\n                {props.elementConfig.placeholder.toLowerCase()}\n            </p>\n        );\n    }\n\n    switch (props.elementType) {\n        case 'input':\n            inputElement = (\n                <input\n                    className={inputClasses.join(' ')}\n                    {...props.elementConfig}\n                    value={props.value}\n                    onChange={props.changed}\n                />\n            );\n            break;\n        case 'textarea':\n            inputElement = (\n                <textarea\n                    style={{ width: '15rem' }}\n                    className={inputClasses.join(' ')}\n                    {...props.elementConfig}\n                    value={props.value}\n                    onChange={props.changed}\n                />\n            );\n            break;\n        case 'select':\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}\n                >\n                    <option value=\"\">--Choose one--</option>\n\n                    {props.elementConfig.options.map((option) => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = (\n                <input\n                    className={inputClasses.join(' ')}\n                    {...props.elementConfig}\n                    value={props.value}\n                    onChange={props.changed}\n                />\n            );\n    }\n\n    return (\n        <div className={style.Input}>\n            {/* <label className={style.Label}>{props.label}</label> */}\n            {inputElement}\n            {validationError}\n        </div>\n    );\n};\n\nexport default Input;\n","import axios from 'axios';\n\nconst service = axios.create({\n    baseURL: 'http://localhost:5000/api',\n    // withCredentials: true // => you might need this when having the users in the app\n});\n\nconst errorHandler = (err) => {\n    // console.error(err);\n    throw err;\n};\n\nexport default {\n    service,\n\n    handleUpload(theFile) {\n        // console.log('file in service: ', theFile)\n        return service\n            .post('/upload', theFile)\n            .then((res) => res.data)\n            .catch(errorHandler);\n    },\n\n    saveNewThing(newThing) {\n        // console.log('new thing is: ', newThing)\n        return service\n            .post('/contact/request', newThing)\n            .then((res) => res.data)\n            .catch(errorHandler);\n    },\n};\n","import React, { useState } from 'react';\nimport style from './EmergencyForm.module.css';\nimport { updateObject, checkValidity } from '../../../utils/utility';\nimport Input from '../../UI/Input/Input';\nimport service from '../../../utils/service';\nimport { Form } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst EmergencyForm = (props) => {\n    const [message, setMessage] = useState('');\n    const [formIsValid, setFormIsValid] = useState(false);\n    // const [form, setForm] = useState({\n    //     // email: {\n    //     //     elementType: 'input',\n    //     //     elementConfig: {\n    //     //         type: 'email',\n    //     //         placeholder: 'Email',\n    //     //     },\n    //     //     value: '',\n    //     //     validation: {\n    //     //         required: true,\n    //     //         isEmail: true,\n    //     //     },\n    //     //     valid: false,\n    //     //     touched: false,\n    //     // },\n    //     description: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'textarea',\n    //             placeholder: 'Tell us...',\n    //         },\n    //         value: '',\n    //         validation: {\n    //             required: true,\n    //         },\n    //         valid: false,\n    //         touched: false,\n    //     },\n    //     image: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'file',\n    //             placeholder: '',\n    //         },\n    //         value: '',\n    //         validation: {},\n    //         valid: false,\n    //         touched: false,\n    //     },\n    // });\n\n    const [form, setForm] = useState({\n        message: '',\n        imageUrl: '',\n    });\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        console.log('name, value', name, value);\n\n        setForm({\n            ...form,\n            [name]: value,\n        });\n    };\n\n    console.log('formUpdated', form);\n    console.log('formIsValid', formIsValid);\n\n    const handleFileUpload = (e) => {\n        console.log('The file to be uploaded is: ', e.target.files[0]);\n\n        const uploadData = new FormData();\n        // imageUrl => this name has to be the same as in the model since we pass\n        // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n        uploadData.append('imageUrl', e.target.files[0]);\n\n        service\n            .handleUpload(uploadData)\n            .then((response) => {\n                console.log('response is: ', response);\n                // after the console.log we can see that response carries 'secure_url' which we can use to update the state\n                setForm({ ...form, imageUrl: response.secure_url });\n            })\n            .catch((err) => {\n                console.log('Error while uploading the file: ', err);\n            });\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\n            'data im sending',\n            form.description,\n            form.image,\n            props.user._id\n        );\n        service\n            .saveNewThing(form)\n            .then((res) => {\n                console.log('added: ', res);\n                // axios\n                //     .post('/contact/request', {\n                //         description: form.description,\n                //     })\n                //     .then((pet) => {\n                //         if (pet.message) {\n                //             setMessage(pet.message);\n\n                // Reset input values\n                for (let key in form) {\n                    setForm({\n                        ...form,\n                        key: { ...key, value: '' },\n                    });\n                }\n                //         } else {\n                //             console.log('pet added', pet);\n                //             props.history.goBack();\n                //         }\n                //     });\n            })\n            .catch((err) => {\n                console.log('Error while adding the thing: ', err);\n            });\n    };\n\n    return (\n        <section id=\"emergencyForm\">\n            <Form\n                className={style.Form}\n                onSubmit={handleSubmit}\n                encType=\"multipart/form-data\"\n            >\n                <textarea\n                    name=\"description\"\n                    rows=\"7\"\n                    cols=\"40\"\n                    value={form.description}\n                    onChange={handleChange}\n                    placeholder=\"Tell us...\"\n                ></textarea>\n\n                {/* <label for=\"image\">Upload: </label> */}\n                <input\n                    type=\"file\"\n                    name=\"image\"\n                    value={form.image}\n                    onChange={(e) => handleFileUpload(e)}\n                ></input>\n\n                {message && (\n                    <p style={{ color: 'red', padding: '0' }}>{message}</p>\n                )}\n                <div className=\"buttons\">\n                    {/* <button onClick={() => props.history.goBack()}>Back</button> */}\n\n                    <button\n                        className={style.Button}\n                        type=\"submit\"\n                        // disabled={!formIsValid}\n                    >\n                        Send\n                    </button>\n                </div>\n            </Form>\n        </section>\n    );\n};\n\nexport default EmergencyForm;\n","import React from 'react';\nimport style from './Map.module.css';\n\nconst Map = () => {\n    return (\n        <section className={style.Container}>\n            <div className={style.infos}>\n                <h5> Contact Information </h5>\n                <address className=\"address\">\n                    Animal Clinic <br /> Buschkrug Allee 206, <br /> 12359\n                    Berlin <br /> Germany <br /> +49 157 00 00 00\n                </address>\n            </div>\n            <div>\n                <div className={style.Map}></div>\n            </div>\n        </section>\n    );\n};\n\nexport default Map;\n","import React from 'react';\nimport style from './Home.module.css';\nimport Carousel from './Carousel/Carousel';\nimport GenInfos from './GenInfos/GenInfos';\nimport EmergencyForm from './EmergencyForm/EmergencyForm';\nimport Map from './Map/Map';\n\nconst Home = (props) => {\n    return (\n        <div className={style.Home}>\n            <Carousel />\n            <GenInfos />\n            <EmergencyForm user={props.user} />\n            <Map />\n        </div>\n    );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport style from './Signup.module.css';\nimport { signup } from '../../../utils/auth';\nimport { Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { updateObject, checkValidity } from '../../../utils/utility';\nimport Input from '../../../Components/UI/Input/Input';\n\nconst Signup = (props) => {\n    const [message, setMessage] = useState('');\n    const [form, setForm] = useState({\n        name: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'First name',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 2,\n            },\n            valid: false,\n            touched: false,\n        },\n        lastName: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Last name',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 2,\n            },\n            valid: false,\n            touched: false,\n        },\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'email',\n                placeholder: 'Email',\n            },\n            value: '',\n            validation: {\n                required: true,\n                isEmail: true,\n            },\n            valid: false,\n            touched: false,\n        },\n        password: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Password',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 3,\n            },\n            valid: false,\n            touched: false,\n        },\n        confirm: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Confirm password',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 3,\n            },\n            valid: false,\n            touched: false,\n        },\n        street: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Street',\n            },\n            value: '',\n            validation: {\n                // required: true,\n            },\n            valid: false,\n            touched: false,\n        },\n        zipCode: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'ZIP Code',\n            },\n            value: '',\n            validation: {\n                // required: true,\n                minLength: 5,\n                maxLength: 5,\n            },\n            valid: false,\n            touched: false,\n        },\n        city: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'City',\n            },\n            value: '',\n            validation: {\n                // required: true,\n            },\n            valid: false,\n            touched: false,\n        },\n        state: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'State',\n            },\n            value: '',\n            validation: {\n                // required: true,\n            },\n            valid: false,\n            touched: false,\n        },\n        phoneNumber: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Phone Num.',\n            },\n            value: '',\n            validation: {\n                // required: true,\n            },\n            valid: false,\n            touched: false,\n        },\n    });\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const handleChange = (e, inputId) => {\n        console.log('inputId', inputId);\n\n        const updatedFormElement = updateObject(form[inputId], {\n            value: e.target.value,\n            valid: checkValidity(e.target.value, form[inputId].validation),\n            touched: true, // input in the form has changed\n        });\n        const updatedForm = updateObject(form, {\n            [inputId]: updatedFormElement,\n        });\n\n        let validForm = true;\n        for (let inputId in updatedForm) {\n            validForm = updatedForm[inputId].valid && formIsValid;\n        }\n        setForm(updatedForm);\n        setFormIsValid(validForm);\n    };\n    console.log('formUpdated', form);\n    console.log('formIsValid', formIsValid);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        signup({\n            name: form.name.value,\n            lastName: form.lastName.value,\n            email: form.email.value,\n            password: form.password.value,\n            confirm: form.confirm.value,\n            street: form.street.value,\n            zipCode: form.zipCode.value,\n            city: form.city.value,\n            state: form.state.value,\n            phoneNumber: form.phoneNumber.value,\n        }).then((user) => {\n            if (user.message) {\n                setMessage(user.message);\n\n                // Reset input values\n                for (let formControl in form) {\n                    setForm({\n                        ...form,\n                        formControl: { ...formControl, value: '' },\n                    });\n                }\n            } else {\n                // signup was successful\n                props.setUser(user);\n                props.history.push('/');\n            }\n        });\n    };\n\n    // Make dynamic input tags for the form\n    const formElementsArray = [];\n    for (let formElement in form) {\n        formElementsArray.push({\n            id: formElement,\n            config: form[formElement],\n        });\n    }\n    let displayedForm = formElementsArray.map((formElement) => {\n        return (\n            <div className=\"form-group\" key={formElement.id}>\n                <Input\n                    className=\"form-control\"\n                    elementType={formElement.config.elementType}\n                    elementConfig={formElement.config.elementConfig}\n                    value={formElement.config.value}\n                    invalid={!formElement.config.valid}\n                    shouldValidate={formElement.config.validation} // validation is required\n                    touched={formElement.config.touched} // input has changed from initial status\n                    changed={(event) => handleChange(event, formElement.id)}\n                />\n            </div>\n        );\n    });\n\n    return (\n        <Form className={style.Form} onSubmit={handleSubmit}>\n            {displayedForm}\n            <button\n                className={style.Button}\n                type=\"submit\"\n                // disabled={!formIsValid}\n            >\n                Sign up\n            </button>\n            {message && <p style={{ color: 'red', padding: '0' }}>{message}</p>}\n\n            {/* <p>\n                Do you already have an account? <Link to=\"/\">Login</Link>\n            </p> */}\n            <Link to=\"/\">Back</Link>\n        </Form>\n    );\n};\n\nexport default Signup;\n","import axios from 'axios';\n\nconst signup = (userCredentials) => {\n    return axios\n        .post('/api/auth/signup', userCredentials)\n        .then((response) => {\n            return response.data;\n        })\n        .catch((err) => {\n            return err.response.data;\n        });\n};\n\nconst login = (userCredentials) => {\n    return axios\n        .post('/api/auth/login', userCredentials)\n        .then((response) => {\n            return response.data;\n        })\n        .catch((err) => {\n            return err.response.data;\n        });\n};\n\nconst logout = () => {\n    return axios\n        .delete('/api/auth/logout')\n        .then((response) => {\n            return response.data;\n        })\n        .catch((err) => {\n            return err.response.data;\n        });\n};\n\nexport { signup, login, logout };\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './Login.module.css';\nimport { Form, InputGroup, FormControl, Button } from 'react-bootstrap';\nimport { login } from '../../../utils/auth';\nimport { updateObject, checkValidity } from '../../../utils/utility';\n\nconst Login = (props) => {\n    const [message, setMessage] = useState('');\n    const [form, setForm] = useState({\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'email',\n                placeholder: 'Email',\n            },\n            value: '',\n            validation: {\n                required: true,\n                isEmail: true,\n            },\n            touched: false,\n        },\n        password: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Password',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLenght: 3,\n            },\n            touched: false,\n        },\n    });\n\n    const handleChange = (event, controlName) => {\n        const updatedForm = updateObject(form, {\n            [controlName]: updateObject(form[controlName], {\n                value: event.target.value,\n                valid: checkValidity(\n                    event.target.value,\n                    form[controlName].validation\n                ),\n                touched: true,\n            }),\n        });\n\n        setForm(updatedForm);\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        login({\n            email: form.email.value,\n            password: form.password.value,\n        }).then((user) => {\n            if (user.message) {\n                setMessage(user.message);\n\n                //Reset input values\n                // for (let key in form) {\n                //     setForm({ ...form, key: { ...key, value: '' } });\n                // }\n                console.log('form', form);\n            } else {\n                //  put the user object in the state of App.js\n                console.log(user);\n                props.setUser(user);\n                props.history.push('/');\n            }\n        });\n    };\n\n    const formElementsArray = [];\n    for (let key in form) {\n        formElementsArray.push({\n            id: key,\n            config: form[key],\n        });\n    }\n\n    let displayedForm = formElementsArray.map((formElement) => (\n        <FormControl\n            key={formElement.id}\n            placeholder={formElement.config.elementConfig.placeholder}\n            type={formElement.config.elementConfig.type}\n            // aria-label=\"email\"s\n            // aria-describedby=\"basic-addon1\"\n            style={{ marginRight: '2%' }}\n            value={formElement.config.value}\n            onChange={(event) => handleChange(event, formElement.id)}\n        />\n    ));\n\n    return (\n        <Form inline className={style.Form} onSubmit={handleSubmit}>\n            <div style={{ display: 'flex' }}>\n                <InputGroup>{displayedForm}</InputGroup>\n                <Button\n                    style={{ maxHeight: '3rem', fontSize: '0.9rem' }}\n                    type=\"submit\"\n                >\n                    Log in\n                </Button>\n            </div>\n            <div>\n                {message ? (\n                    <p style={{ color: 'red' }}>{message}</p>\n                ) : (\n                    <div>\n                        <p>\n                            Haven't you registered yet?\n                            <Link to={'/signup'} className={style.Button}>\n                                Sign up\n                            </Link>\n                            here\n                        </p>\n                    </div>\n                )}\n            </div>\n        </Form>\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport style from './Navbar.module.css';\nimport { Link } from 'react-router-dom';\nimport { logout } from '../../utils/auth';\nimport Login from '../Auth/Login/Login';\nimport { Navbar as Nav } from 'react-bootstrap';\n\nconst Navbar = (props) => {\n    console.log('isEmployee', props.isEmployee);\n\n    const handleLogout = () =>\n        logout()\n            .then(() => {\n                props.setUser(() => '');\n                props.history.push('/');\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n\n    return (\n        <Nav className={style.Navbar}>\n            {!props.user ? (\n                <Login setUser={props.setUser} history={props.history} />\n            ) : (\n                <div\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                        width: '100%',\n                    }}\n                >\n                    <Link to=\"/\" style={{ marginLeft: '5%' }}>\n                        <img\n                            src=\"../../../images/home-logo.png\"\n                            alt=\"\"\n                            style={{ width: '2.5rem' }}\n                        />\n                    </Link>\n                    <ul>\n                        <li>\n                            <Link to={`/users/${props.user._id}`}>Profile</Link>\n                        </li>\n                        <li>\n                            <button\n                                className={style.Button}\n                                onClick={handleLogout}\n                            >\n                                Logout\n                            </button>\n                        </li>\n                    </ul>\n                </div>\n            )}\n            {props.isEmployee ? (\n                <ul>\n                    <li>\n                        <Link to=\"/users\">Users</Link>\n                    </li>\n\n                    <li>\n                        <Link to=\"/pets\">Patients</Link>\n                    </li>\n                </ul>\n            ) : (\n                <ul>\n                    <li>\n                        <Link to=\"#emergencyForm\">Book an appointment</Link>\n                    </li>\n                </ul>\n            )}\n        </Nav>\n    );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport style from './Footer.module.css';\nimport { Link } from 'react-router-dom';\n\nconst Footer = () => {\n    return (\n        <div className={style.Footer}>\n            <h5> Follow Us </h5>\n            <ul>\n                <li>\n                    <Link to=\"#\"> Twitter </Link>\n                </li>\n                <li>\n                    <Link to=\"#\"> Facebook </Link>\n                </li>\n                <li>\n                    <Link to=\"#\"> Instagram </Link>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\n\nconst Checkbox = (props) => {\n    return (\n        <div\n            style={{\n                display: 'flex',\n                alignItems: 'flex-start',\n                marginLeft: '10%',\n            }}\n        >\n            <input\n                type=\"checkbox\"\n                name={props.name}\n                checked={props.checked}\n                onChange={props.handleChange}\n            />\n            <label style={{ marginLeft: '15%' }} htmlFor={props.name}>\n                {props.label}\n            </label>\n        </div>\n    );\n};\n\nexport default Checkbox;\n","import React from 'react';\n\nconst Dropdown = (props) => {\n    return (\n        <div style={{ width: '50%' }}>\n            <label htmlFor=\"role\">Role: </label>\n            <select\n                name=\"role\"\n                id=\"role\"\n                style={{ width: ' 7rem', margin: '5% 0 0 5%' }}\n                onChange={props.handleChange}\n            >\n                <option value=\"\">All</option>\n                {props.userRoleOptions}\n            </select>\n        </div>\n    );\n};\n\nexport default Dropdown;\n","import React from 'react';\n\nconst SearchField = (props) => {\n    return (\n        <div\n            style={{\n                margin: '5% 0 3% 0',\n            }}\n        >\n            <input\n                type=\"text\"\n                name=\"search\"\n                id=\"search\"\n                placeholder=\"Search...\"\n                onChange={props.handleChange}\n                style={{ width: '20rem' }}\n            />\n        </div>\n    );\n};\n\nexport default SearchField;\n","import React from 'react';\nimport style from './Filters.module.css';\nimport Checkbox from '../UI/Checkbox/Checkbox';\nimport Dropdown from '../UI/Dropdown/Dropdown';\nimport SearchField from '../UI/SearchField/SearchField';\n\nconst Filters = (props) => {\n    return (\n        <form\n            style={{\n                width: '80vw',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-around',\n                alignItems: 'flex-start',\n            }}\n        >\n            <SearchField handleChange={props.handleChange} />\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'flex-start',\n                    width: '30rem',\n                    marginBottom: '10%',\n                }}\n            >\n                {props.userRoleOptions ? (\n                    <Dropdown\n                        userRoleOptions={props.userRoleOptions}\n                        handleChange={props.handleChange}\n                    />\n                ) : (\n                    <div className={style.Container}>\n                        <Checkbox\n                            name=\"dog\"\n                            label=\"Dog\"\n                            checked={props.isDog}\n                            handleChange={props.handleChange}\n                        />\n                        <Checkbox\n                            name=\"cat\"\n                            label=\"Cat\"\n                            checked={props.isCat}\n                            handleChange={props.handleChange}\n                        />\n                        <Checkbox\n                            name=\"bird\"\n                            label=\"Bird\"\n                            checked={props.isBird}\n                            handleChange={props.handleChange}\n                        />\n                        <Checkbox\n                            name=\"rodent\"\n                            label=\"Rodent\"\n                            checked={props.isRodent}\n                            handleChange={props.handleChange}\n                        />\n                        <Checkbox\n                            name=\"reptile\"\n                            label=\"Reptile\"\n                            checked={props.isReptile}\n                            handleChange={props.handleChange}\n                        />\n                        <Checkbox\n                            name=\"other\"\n                            label=\"Other\"\n                            checked={props.isOther}\n                            handleChange={props.handleChange}\n                        />\n                    </div>\n                )}\n            </div>\n        </form>\n    );\n};\n\nexport default Filters;\n","import React from \"react\";\nimport classes from \"./Spinner.module.css\";\n\nconst spinner = () => {\n    return <div className={classes.Loader}>Loading...</div>;\n};\n\nexport default spinner;\n","import React, { useState, useEffect } from 'react';\nimport style from './UserList.module.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Filters from '../../Filters/Filters';\nimport Spinner from '../../UI/Spinner/Spinner';\n\nconst UsersList = (props) => {\n    const [usersList, setUsersList] = useState([]);\n    const [searchField, setSearchField] = useState('');\n    const [selectedRole, setSelectedRole] = useState('');\n    const [isDog, setIsDog] = useState(true);\n    const [isCat, setIsCat] = useState(true);\n    const [isBird, setIsBird] = useState(true);\n    const [isReptile, setIsReptile] = useState(true);\n    const [isOther, setIsOther] = useState(true);\n\n    const fetchData = () => {\n        axios\n            .get('/api/users')\n            .then((users) => {\n                console.log('users', users.data);\n                setUsersList(users.data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    console.log('usersList', usersList);\n\n    const handleChange = (event) => {\n        if (event.target.type === 'select-one') {\n            setSelectedRole(event.target.value);\n        } else if (event.target.type === 'checkbox') {\n            if (event.target.name === 'dog') {\n                setIsDog(() => !isDog);\n            } else if (event.target.name === 'cat') {\n                setIsCat(() => !isCat);\n            } else if (event.target.name === 'bird') {\n                setIsBird(() => !isBird);\n            } else if (event.target.name === 'reptile') {\n                setIsReptile(() => !isReptile);\n            } else {\n                setIsOther(() => !isOther);\n            }\n        } else {\n            setSearchField(event.target.value);\n        }\n    };\n\n    const filteredSearch = usersList.filter((element) => {\n        return (\n            (`${element.name}`\n                .toLowerCase()\n                .includes(`${searchField.toLowerCase()}`) ||\n                `${element.lastName}`\n                    .toLowerCase()\n                    .includes(`${searchField.toLowerCase()}`)) &&\n            (element.role === selectedRole || !selectedRole)\n        );\n        // );\n    });\n\n    const displayUsers = filteredSearch.map((user) => {\n        return (\n            <tr key={user._id} className={style.resultCard}>\n                <td style={{ width: '30%' }}>\n                    <Link to={`/users/${user._id}`}>\n                        {user.lastName}, {user.name}\n                    </Link>\n                </td>\n                <td>{user.role}</td>\n\n                <td style={{ display: 'flex' }}>\n                    {user.pets.map((pet) => {\n                        console.log('pet', pet);\n                        {\n                            /* \n                        return (\n                            <Link to={`/pets/${pet}`}>\n                                <span\n                                    style={{\n                                        marginRight: '5%',\n                                        fontSize: '1rem',\n                                    }}\n                                >\n                                    ⭑\n                                </span>\n                            </Link> */\n                        }\n                        {\n                            /* ); */\n                        }\n                        {\n                            switch (pet.specie) {\n                                case 'dog':\n                                    return (\n                                        <Link to={`/pets/${pet._id}`}>\n                                            <img\n                                                src=\"../../../../images/dog-logo.png\"\n                                                alt=\"dog-logo\"\n                                                style={{\n                                                    width: '1.5rem',\n                                                    paddingRight: '15%',\n                                                }}\n                                            />\n                                        </Link>\n                                    );\n                                case 'cat':\n                                    return (\n                                        <Link to={`/pets/${pet._id}`}>\n                                            <img\n                                                src=\"../../../../images/cat-logo.png\"\n                                                alt=\"cat-logo\"\n                                                style={{\n                                                    width: '1.5rem',\n                                                    paddingRight: '15%',\n                                                }}\n                                            />\n                                        </Link>\n                                    );\n                                case 'rodent':\n                                    return (\n                                        <Link to={`/pets/${pet._id}`}>\n                                            <img\n                                                src=\"../../../../images/rodent-logo.png\"\n                                                alt=\"rodent-logo\"\n                                                style={{\n                                                    width: '1.5rem',\n                                                    paddingRight: '15%',\n                                                }}\n                                            />\n                                        </Link>\n                                    );\n                                case 'bird':\n                                    return (\n                                        <Link to={`/pets/${pet._id}`}>\n                                            <img\n                                                src=\"../../../../images/bird-logo.png\"\n                                                alt=\"bird-logo\"\n                                                style={{\n                                                    width: '1.5rem',\n                                                    paddingRight: '15%',\n                                                }}\n                                            />\n                                        </Link>\n                                    );\n                                case 'reptile':\n                                    return (\n                                        <Link to={`/pets/${pet._id}`}>\n                                            <img\n                                                src=\"../../../../images/reptile-logo.png\"\n                                                alt=\"reptile-logo\"\n                                                style={{\n                                                    width: '1.5rem',\n                                                    paddingRight: '15%',\n                                                }}\n                                            />\n                                        </Link>\n                                    );\n                                case 'other':\n                                    return (\n                                        <Link to={`/pets/${pet._id}`}>\n                                            <img\n                                                src=\"../../../../images/other-logo.png\"\n                                                alt=\"other-logo\"\n                                                style={{\n                                                    width: '1.5rem',\n                                                    paddingRight: '15%',\n                                                }}\n                                            />\n                                        </Link>\n                                    );\n                            }\n                        }\n                    })}\n                </td>\n            </tr>\n        );\n    });\n    // const userRoles = [...new Set(usersList.map((user) => user.role)]\n    //  const userRoleOptions = userRoles.map((role) => {\n    //      return (\n    //          <option value={role} key={role}>\n    //              {role}\n    //          </option>\n    //      );\n    //  });\n    const userRoleOptions = (\n        <>\n            <option value=\"employee\">employee</option>\n            <option value=\"client\">client</option>\n        </>\n    );\n\n    if (!usersList) return <Spinner />;\n    return (\n        <div className={style.Container}>\n            <Filters\n                handleChange={handleChange}\n                userRoleOptions={userRoleOptions}\n            />\n            <button className={style.Button}>\n                <Link to={'/users/add'}>\n                    <span>+</span>\n                </Link>\n            </button>\n            <table style={{ margin: '0 0 10% 5%' }}>\n                <tbody>{displayUsers}</tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default UsersList;\n","import React from 'react';\nimport style from './EditUser.module.css';\n\nconst editUser = (props) => {\n    return (\n        <div>\n            <form className={style.Form} onSubmit={props.handleSubmit}>\n                <h2>Edit </h2>\n                <div className={style.Input}>\n                    <label htmlFor=\"name\">Name: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        value={props.selectedUserForm.name}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"name\">Last name: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"lastName\"\n                        name=\"lastName\"\n                        value={props.selectedUserForm.lastName}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                {/* <div className={style.Input}>\n                    <label htmlFor=\"name\">E-mail: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"email\"\n                        name=\"email\"\n                        value={props.selectedUserForm.email}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"password\">Password: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"password\"\n                        name=\"password\"\n                        value=\"\"\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"confirm\"> Confirm Password: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"confirm\"\n                        name=\"confirm\"\n                        value=\"\"\n                        onChange={props.handleChange}\n                    />\n                </div> */}\n                <div className={style.Input}>\n                    <label htmlFor=\"street\">Street: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"street\"\n                        name=\"street\"\n                        value={props.selectedUserForm.address.street}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"zipCode\">ZIP Code: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"zipCode\"\n                        name=\"zipCode\"\n                        value={props.selectedUserForm.address.zipCode}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"city\">City: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"city\"\n                        name=\"city\"\n                        value={props.selectedUserForm.address.city}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"state\">State: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"state\"\n                        name=\"state\"\n                        value={props.selectedUserForm.address.state}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"phoneNum\">Phone Num: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"phoneNumber\"\n                        name=\"phoneNumber\"\n                        value={props.selectedUserForm.phoneNumber}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.buttons}>\n                    <button type=\"submit\">Update</button>\n                    <button onClick={props.toggleEditForm}>Back</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default editUser;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './UserDetails.module.css';\nimport axios from 'axios';\nimport Spinner from '../../UI/Spinner/Spinner';\nimport { updateObject, checkValidity } from '../../../utils/utility';\nimport EditUser from '../EditUser/EditUser';\n\nconst UserDetails = (props) => {\n    console.log('UserDetails props', props);\n    const [error, setError] = useState(null);\n    const [editForm, setEditForm] = useState(false);\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const [selectedUserForm, setSelectedUserForm] = useState(\n        // {\n        //     name: {\n        //         elementType: 'input',\n        //         elementConfig: {\n        //             type: 'text',\n        //             placeholder: 'First name',\n        //         },\n        //         value: '',\n        //         validation: {\n        //             required: true,\n        //             minLength: 2,\n        //         },\n        //         valid: false,\n        //         touched: false,\n        //     },\n        //     lastName: {\n        //         elementType: 'input',\n        //         elementConfig: {\n        //             type: 'text',\n        //             placeholder: 'Last name',\n        //         },\n        //         value: '',\n        //         validation: {\n        //             required: true,\n        //             minLength: 2,\n        //         },\n        //         valid: false,\n        //         touched: false,\n        //     },\n        //     email: {\n        //         elementType: 'input',\n        //         elementConfig: {\n        //             type: 'email',\n        //             placeholder: 'Email',\n        //         },\n        //         value: '',\n        //         validation: {\n        //             required: true,\n        //             isEmail: true,\n        //             unique: true, /// you still have to write the code for this validation\n        //         },\n        //         valid: false,\n        //         touched: false,\n        //     },\n        //     street: {\n        //         elementType: 'input',\n        //         elementConfig: {\n        //             type: 'text',\n        //             placeholder: 'Street',\n        //         },\n        //         value: '',\n        //         validation: {\n        //             // required: true,\n        //         },\n        //         valid: false,\n        //         touched: false,\n        //     },\n        //     zipCode: {\n        //         elementType: 'input',\n        //         elementConfig: {\n        //             type: 'text',\n        //             placeholder: 'ZIP Code',\n        //         },\n        //         value: '',\n        //         validation: {\n        //             // required: true,\n        //             minLength: 5,\n        //             maxLength: 5,\n        //         },\n        //         valid: false,\n        //         touched: false,\n        //     },\n        //     city: {\n        //         elementType: 'input',\n        //         elementConfig: {\n        //             type: 'text',\n        //             placeholder: 'City',\n        //         },\n        //         value: '',\n        //         validation: {\n        //             // required: true,\n        //         },\n        //         valid: false,\n        //         touched: false,\n        //     },\n        //     state: {\n        //         elementType: 'input',\n        //         elementConfig: {\n        //             type: 'text',\n        //             placeholder: 'State',\n        //         },\n        //         value: '',\n        //         validation: {\n        //             // required: true,\n        //         },\n        //         valid: false,\n        //         touched: false,\n        //     },\n        //     phoneNumber: {\n        //         elementType: 'input',\n        //         elementConfig: {\n        //             type: 'text',\n        //             placeholder: 'Phone Num.',\n        //         },\n        //         value: '',\n        //         validation: {\n        //             // required: true,\n        //         },\n        //         valid: false,\n        //         touched: false,\n        //     },\n        //     role: {\n        //         elementType: 'select',\n        //         elementConfig: {\n        //             options: [\n        //                 { value: 'employee', displayValue: 'employee' },\n        //                 { value: 'client', displayValue: 'client' },\n        //             ],\n        //         },\n        //         value: '',\n        //         validation: {},\n        //         valid: true,\n        //     },\n        // } || ''\n\n        ''\n    );\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = async () => {\n        await axios\n            .get(`/api/users/${props.match.params.id}`)\n            .then((response) => {\n                console.log('response from DB', response.data);\n\n                setSelectedUserForm(\n                    updateObject(response.data.user, {\n                        pets: response.data.pets,\n                    })\n                );\n\n                // setSelectedUserForm({\n                //     ...selectedUserForm,\n                //     owner: {\n                //         ...form.owner,\n                //         elementConfig: {\n                //             ...form.elementConfig,\n                //             options: users.data,\n                //         },\n                //     },\n                // });\n                // for (let formControl in selectedUserForm) {\n                //     setSelectedUserForm(\n                //         updateObject({\n                //             ...selectedUserForm,\n                //             formControl: {\n                //                 ...formControl,\n                //                 value: response.data[formControl],\n                //             },\n                //         })\n                //     );\n                // }\n            })\n\n            .catch((err) => {\n                console.log(err.response);\n                if (err.response.status === 404) {\n                    setError({\n                        error: 'User not found',\n                    });\n                }\n            });\n    };\n    console.log('selectedUserForm', selectedUserForm);\n\n    const handleChange = (event) => {\n        // console.log('inputId', inputId);\n        const { name, value } = event.target;\n        console.log('name, value', name, value);\n\n        setSelectedUserForm({\n            ...selectedUserForm,\n            [name]: value,\n            address: {\n                ...selectedUserForm.address,\n                [name]: value,\n            },\n        });\n        // const updatedFormElement = updateObject(selectedUserForm[inputId], {\n        //     value: event.target.value,\n        //     valid: checkValidity(\n        //         event.target.value,\n        //         selectedUserForm[inputId].validation\n        //     ),\n        //     touched: true, // input in the form has changed\n        // });\n        // const updatedForm = updateObject(selectedUserForm, {\n        //     [inputId]: updatedFormElement,\n        // });\n\n        // let validForm = true;\n        // for (let inputId in updatedForm) {\n        //     validForm = updatedForm[inputId].valid && validForm;\n        // }\n        // setSelectedUserForm(updatedForm);\n        // setFormIsValid(validForm);\n    };\n\n    console.log('selectedUserForm', selectedUserForm);\n\n    const toggleEditForm = () => {\n        setEditForm(() => !editForm);\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log('update');\n        axios\n            .put(`/api/users/${selectedUserForm._id}`, {\n                name: selectedUserForm.name,\n                lastName: selectedUserForm.lastName,\n                email: selectedUserForm.email,\n                street: selectedUserForm.address.street,\n                zipCode: selectedUserForm.address.zipCode,\n                city: selectedUserForm.address.city,\n                state: selectedUserForm.address.state,\n                phoneNumber: selectedUserForm.phoneNumber,\n            })\n            .then((response) => {\n                props.history.goBack();\n\n                // fetchData();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const deleteUser = async () => {\n        await axios\n            .delete(`/api/users/${selectedUserForm._id}`)\n            .then(() => {\n                console.log(\n                    `${selectedUserForm.name} ${selectedUserForm.lastName} was successfully removed`\n                );\n                props.history.push('/');\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    if (!selectedUserForm) return <Spinner />;\n    return (\n        <>\n            {editForm ? (\n                <EditUser\n                    toggleEditForm={toggleEditForm}\n                    handleChange={handleChange}\n                    handleSubmit={handleSubmit}\n                    selectedUserForm={selectedUserForm}\n                />\n            ) : (\n                // <>\n                <div className={style.Card}>\n                    <h3>\n                        {selectedUserForm.name} {selectedUserForm.lastName}\n                    </h3>\n                    <div className={style.AddButton}>\n                        {!props.isEmployee ? (\n                            <Link to=\"/pets/add\">\n                                <span style={{ fontSize: 'bold' }}>+</span>\n                                <span>pet</span>\n                            </Link>\n                        ) : (\n                            <Link to={`/users/${selectedUserForm._id}/pet`}>\n                                <span style={{ fontSize: 'bold' }}>+</span>\n                                <span>pet</span>\n                            </Link>\n                        )}\n                    </div>\n                    <div className={style.Infos}>\n                        <div style={{ width: '100%' }}>\n                            <p>Address: </p>\n                            <p>\n                                &nbsp; Street: {selectedUserForm.address.street}\n                            </p>\n                            <p>\n                                &nbsp; ZIP Code:\n                                {selectedUserForm.address.zipCode}\n                            </p>\n                            <p>&nbsp; City: {selectedUserForm.address.city}</p>\n                            <p>\n                                &nbsp; State: {selectedUserForm.address.state}\n                            </p>\n                            <hr />\n                            <p>\n                                <img\n                                    src=\"../../../../images/email-logo.png\"\n                                    alt=\"phone-logo\"\n                                    style={{\n                                        width: '1.2rem',\n                                        marginRight: '5%',\n                                    }}\n                                />\n                                {selectedUserForm.email}\n                            </p>\n                            <p>\n                                <img\n                                    src=\"../../../../images/phone-logo.png\"\n                                    alt=\"phone-logo\"\n                                    style={{\n                                        width: '1.2rem',\n                                        marginRight: '7%',\n                                    }}\n                                />{' '}\n                                {selectedUserForm.phoneNumber}\n                            </p>\n                            <hr />\n                            {selectedUserForm.position && (\n                                <p>Position: {selectedUserForm.position}</p>\n                            )}\n                            <p>\n                                {selectedUserForm.role} since: <br />\n                                {selectedUserForm.createdAt}\n                            </p>\n                        </div>\n                        <div style={{ width: '100%' }}>\n                            <p>Pets: </p>\n                            <ul>\n                                {selectedUserForm.pets.map((pet) => {\n                                    return (\n                                        <Link to={`/pets/${pet._id}`}>\n                                            <li>\n                                                {pet.name}\n                                                <br />\n                                                {pet.specie}\n                                                <br />\n                                                {pet.breed}\n                                                <br />\n                                            </li>\n                                        </Link>\n                                    );\n                                })}\n                            </ul>\n                        </div>\n                    </div>\n                    <div className={style.buttons}>\n                        {/* <div>\n                            {!props.isEmployee ? (\n                                <Link to=\"/pets/add\">\n                                    <span style={{ fontSize: 'bold' }}>+</span>\n                                    <span>pet</span>\n                                </Link>\n                            ) : (\n                                <Link to={`/users/${selectedUserForm._id}/pet`}>\n                                    <span style={{ fontSize: 'bold' }}>+</span>\n                                    <span>pet</span>\n                                </Link>\n                            )}\n                        </div> */}\n                        <div>\n                            <button onClick={() => props.history.goBack()}>\n                                Back\n                            </button>\n                        </div>\n                        <div style={{ display: 'flex', marginRight: '5%' }}>\n                            <button onClick={toggleEditForm}>Edit</button>\n                            {/* <Link to={`/users/${selectedUserForm._id}/edit`}>Edit</Link> */}\n                            <button onClick={deleteUser}>Delete</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default UserDetails;\n","import React, { useState } from 'react';\nimport style from './AddUser.module.css';\nimport { updateObject, checkValidity } from '../../../utils/utility';\nimport Input from '../../../Components/UI/Input/Input';\nimport { Form } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst AddUser = (props) => {\n    const [message, setMessage] = useState('');\n    const [form, setForm] = useState({\n        name: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'First name',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 2,\n            },\n            valid: false,\n            touched: false,\n        },\n        lastName: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Last name',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 2,\n            },\n            valid: false,\n            touched: false,\n        },\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'email',\n                placeholder: 'Email',\n            },\n            value: '',\n            validation: {\n                required: true,\n                isEmail: true,\n                unique: true, /// you still have to write the code for this validation\n            },\n            valid: false,\n            touched: false,\n        },\n        street: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Street',\n            },\n            value: '',\n            validation: {\n                // required: true,\n            },\n            valid: false,\n            touched: false,\n        },\n        zipCode: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'ZIP Code',\n            },\n            value: '',\n            validation: {\n                // required: true,\n                minLength: 5,\n                maxLength: 5,\n            },\n            valid: false,\n            touched: false,\n        },\n        city: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'City',\n            },\n            value: '',\n            validation: {\n                // required: true,\n            },\n            valid: false,\n            touched: false,\n        },\n        state: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'State',\n            },\n            value: '',\n            validation: {\n                // required: true,\n            },\n            valid: false,\n            touched: false,\n        },\n\n        phoneNumber: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Phone Num.',\n            },\n            value: '',\n            validation: {\n                // required: true,\n            },\n            valid: false,\n            touched: false,\n        },\n        role: {\n            elementType: 'select',\n            elementConfig: {\n                options: [\n                    { value: 'employee', displayValue: 'employee' },\n                    { value: 'client', displayValue: 'client' },\n                ],\n            },\n            value: 'client',\n            validation: {},\n            valid: true,\n        },\n    });\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const handleChange = (e, inputId) => {\n        console.log('inputId', inputId);\n        console.log('required?', checkValidity(form[inputId].validation));\n\n        const updatedFormElement = updateObject(form[inputId], {\n            value: e.target.value,\n            valid: checkValidity(e.target.value, form[inputId].validation),\n            touched: true, // input in the form has changed\n        });\n        const updatedForm = updateObject(form, {\n            [inputId]: updatedFormElement,\n        });\n\n        let validForm = true;\n        for (let inputId in updatedForm) {\n            validForm = updatedForm[inputId].valid && validForm;\n        }\n        setForm(updatedForm);\n        setFormIsValid(validForm);\n    };\n    console.log('formUpdated', form);\n    console.log('formIsValid', formIsValid);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        axios\n            .post('/api/users/add', {\n                name: form.name.value,\n                lastName: form.lastName.value,\n                email: form.email.value,\n                street: form.street.value,\n                zipCode: form.zipCode.value,\n                city: form.city.value,\n                state: form.state.value,\n                role: form.role.value,\n                phoneNumber: form.phoneNumber.value,\n            })\n            .then((user) => {\n                if (user.message) {\n                    setMessage(user.message);\n\n                    // Reset input values\n                    for (let key in form) {\n                        setForm({\n                            ...form,\n                            key: { ...key, value: '' },\n                        });\n                    }\n                } else {\n                    console.log('user added', user);\n                    props.history.goBack();\n                }\n                // update the list of users\n                // props.fetchData();\n            });\n    };\n    // Make dynamic input tags for the form\n    const formElementsArray = [];\n    for (let formElement in form) {\n        formElementsArray.push({\n            id: formElement,\n            config: form[formElement],\n        });\n    }\n    let displayedForm = formElementsArray.map((formElement) => {\n        return (\n            <div className=\"form-group\" key={formElement.id}>\n                <Input\n                    className=\"form-control\"\n                    elementType={formElement.config.elementType}\n                    elementConfig={formElement.config.elementConfig}\n                    value={formElement.config.value}\n                    invalid={!formElement.config.valid}\n                    shouldValidate={formElement.config.validation} // validation is required\n                    touched={formElement.config.touched} // input has changed from initial status\n                    changed={(event) => handleChange(event, formElement.id)}\n                />\n            </div>\n        );\n    });\n\n    return (\n        <div>\n            <Form className={style.Form} onSubmit={handleSubmit}>\n                {displayedForm}\n                <button className={style.Button} type=\"submit\">\n                    <h1 style={{ fontWeight: 'bold' }}>+</h1>\n                </button>\n\n                {message && <p style={{ color: 'red' }}>{message}</p>}\n            </Form>\n        </div>\n    );\n};\n\nexport default AddUser;\n","import React, { useState, useEffect } from 'react';\nimport style from './AddPet.module.css';\nimport { updateObject, checkValidity } from '../../../utils/utility';\nimport Input from '../../../Components/UI/Input/Input';\nimport { Form } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst AddPet = (props) => {\n    const [message, setMessage] = useState('');\n\n    const [form, setForm] = useState({\n        specie: {\n            elementType: 'select',\n            elementConfig: {\n                options: [\n                    { value: 'dog', displayValue: 'dog' },\n                    { value: 'cat', displayValue: 'cat' },\n                    { value: 'rodent', displayValue: 'rodent' },\n                    { value: 'bird', displayValue: 'bird' },\n                    { value: 'reptile', displayValue: 'reptile' },\n                    { value: 'other', displayValue: 'other' },\n                ],\n            },\n            validation: {},\n            valid: true,\n        },\n\n        name: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Name',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 2,\n            },\n            valid: false,\n            touched: false,\n        },\n\n        breed: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Breed',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 3,\n            },\n            valid: false,\n            touched: false,\n        },\n        age: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Age',\n            },\n            value: '',\n            validation: {\n                minLength: 1,\n            },\n            valid: false,\n            touched: false,\n        },\n        diagnosis: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Diagnosis',\n            },\n            value: '',\n            validation: {\n                minLength: 3,\n            },\n            valid: false,\n            touched: false,\n        },\n        treatment: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Treatment',\n            },\n            value: '',\n            validation: {\n                minLength: 3,\n            },\n            valid: false,\n            touched: false,\n        },\n\n        owner: {\n            elementType: 'select',\n            elementConfig: {\n                options: [],\n            },\n            validation: {},\n            valid: true,\n        },\n    });\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = () => {\n        axios\n            .get('/api/users/owners')\n            .then((users) => {\n                // console.log('options from DB', users.data);\n                setForm({\n                    ...form,\n                    owner: {\n                        ...form.owner,\n                        elementConfig: {\n                            ...form.elementConfig,\n                            options: users.data,\n                        },\n                    },\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const handleChange = (e, inputId) => {\n        const updatedFormElement = updateObject(form[inputId], {\n            value: e.target.value,\n            valid: checkValidity(e.target.value, form[inputId].validation),\n            touched: true, // input in the form has changed\n        });\n        const updatedForm = updateObject(form, {\n            [inputId]: updatedFormElement,\n        });\n\n        let validForm = true;\n        for (let inputId in updatedForm) {\n            validForm = updatedForm[inputId].valid && validForm;\n        }\n        setForm(updatedForm);\n        setFormIsValid(validForm);\n    };\n    console.log('formUpdated', form);\n    console.log('formIsValid', formIsValid);\n\n    //Set dinamically url according to role and history url\n    let url;\n    let owner;\n\n    {\n        props.location.pathname !== '/pets/add'\n            ? (url = `/api/users/${props.location.pathname\n                  .split('/')[2]\n                  .toString()}/pet`) &&\n              (owner = props.location.pathname.split('/')[2].toString())\n            : (url = '/api/pets/add') && (owner = form.owner.value);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        axios\n            .post(url, {\n                name: form.name.value,\n                specie: form.specie.value,\n                breed: form.breed.value,\n                age: form.age.value,\n                diagnosis: form.diagnosis.value,\n                treatment: form.treatment.value,\n                owner: owner,\n            })\n            .then((pet) => {\n                if (pet.message) {\n                    setMessage(pet.message);\n\n                    // Reset input values\n                    // for (let key in form) {\n                    //     setForm({\n                    //         ...form,\n                    //         key: { ...key, value: '' },\n                    //     });\n                    // }\n                } else {\n                    console.log('pet added', pet);\n                    props.history.goBack();\n                }\n            });\n    };\n    // Make dynamic input tags for the form\n    const formElementsArray = [];\n    for (let formElement in form) {\n        formElementsArray.push({\n            id: formElement,\n            config: form[formElement],\n        });\n    }\n    let displayedForm = formElementsArray.map((formElement) => {\n        let inputs = '';\n\n        {\n            props.isEmployee &&\n                (inputs = (\n                    <div className=\"form-group\" key={formElement.id}>\n                        <Input\n                            className=\"form-control\"\n                            elementType={formElement.config.elementType}\n                            elementConfig={formElement.config.elementConfig}\n                            value={formElement.config.value}\n                            invalid={!formElement.config.valid}\n                            shouldValidate={formElement.config.validation} // validation is required\n                            touched={formElement.config.touched} // input has changed from initial status\n                            changed={(event) =>\n                                handleChange(event, formElement.id)\n                            }\n                        />\n                    </div>\n                ));\n        }\n\n        {\n            formElement.id !== 'owner' &&\n                (inputs = (\n                    <div className=\"form-group\" key={formElement.id}>\n                        <Input\n                            className=\"form-control\"\n                            elementType={formElement.config.elementType}\n                            elementConfig={formElement.config.elementConfig}\n                            value={formElement.config.value}\n                            invalid={!formElement.config.valid}\n                            shouldValidate={formElement.config.validation} // validation is required\n                            touched={formElement.config.touched} // input has changed from initial status\n                            changed={(event) =>\n                                handleChange(event, formElement.id)\n                            }\n                        />\n                    </div>\n                ));\n            // setForm({\n            //     ...form,\n            //     owner: {\n            //         ...form.owner,\n            //         elementConfig: {\n            //             ...form.elementConfig,\n            //             options: {\n            //                 value: props.user._id,\n            //                 displayValue: `${props.user.lastName}, ${props.user.lastName}`,\n            //             },\n            //         },\n            //     },\n            // });\n        }\n\n        return inputs;\n    });\n\n    return (\n        <div>\n            <Form className={style.Form} onSubmit={handleSubmit}>\n                <h3>Add pet</h3>\n                {displayedForm}\n                <button className={style.Button} type=\"submit\">\n                    <span>+</span>\n                </button>\n                <button onClick={() => props.history.goBack()}>Back</button>\n\n                {message && <p style={{ color: 'red' }}>{message}</p>}\n            </Form>\n        </div>\n    );\n};\n\nexport default AddPet;\n","import React, { useState, useEffect } from 'react';\nimport style from './PetsList.module.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Filters from '../../Filters/Filters';\nimport Spinner from '../../UI/Spinner/Spinner';\n\nconst PetsList = (props) => {\n    const [petsList, setPetsList] = useState([]);\n    const [searchField, setSearchField] = useState('');\n    const [isDog, setIsDog] = useState(true);\n    const [isCat, setIsCat] = useState(true);\n    const [isRodent, setIsRodent] = useState(true);\n    const [isBird, setIsBird] = useState(true);\n    const [isReptile, setIsReptile] = useState(true);\n    const [isOther, setIsOther] = useState(true);\n\n    const fetchData = () => {\n        axios\n            .get('/api/pets')\n            .then((pets) => {\n                console.log('pets', pets.data);\n                setPetsList(pets.data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    console.log('petsList', petsList);\n\n    const handleChange = (event) => {\n        if (event.target.type === 'checkbox') {\n            if (event.target.name === 'dog') {\n                setIsDog(() => !isDog);\n            } else if (event.target.name === 'cat') {\n                setIsCat(() => !isCat);\n            } else if (event.target.name === 'bird') {\n                setIsBird(() => !isBird);\n            } else if (event.target.name === 'rodent') {\n                setIsRodent(() => !isRodent);\n            } else if (event.target.name === 'reptile') {\n                setIsReptile(() => !isReptile);\n            } else {\n                setIsOther(() => !isOther);\n            }\n        } else {\n            setSearchField(event.target.value);\n        }\n    };\n\n    const filteredSearch = petsList.filter((element) => {\n        return (\n            ((isDog && element.specie === 'dog') ||\n                (isCat && element.specie === 'cat') ||\n                (isBird && element.specie === 'bird') ||\n                (isRodent && element.specie === 'rodent') ||\n                (isReptile && element.specie === 'reptile') ||\n                (isOther && element.specie === 'other')) &&\n            (`${element.name}`\n                .toLowerCase()\n                .includes(`${searchField.toLowerCase()}`) ||\n                `${element.lastName}`\n                    .toLowerCase()\n                    .includes(`${searchField.toLowerCase()}`))\n        );\n    });\n\n    const displayUsers = filteredSearch.map((pet) => {\n        console.log('pet', pet);\n        return (\n            <tr key={pet._id} className={style.resultCard}>\n                <td style={{ width: '30%' }}>\n                    <Link to={`/pets/${pet._id}`}>{pet.name}</Link>\n                </td>\n                <td>{pet.specie}</td>\n\n                <td>{/* {pet.owner.name}, {pet.owner.lastName} */}</td>\n            </tr>\n        );\n    });\n\n    if (!petsList) return <Spinner />;\n    return (\n        <div className={style.Container}>\n            <Filters\n                handleChange={handleChange}\n                isDog={isDog}\n                isCat={isCat}\n                isBird={isBird}\n                isRodent={isRodent}\n                isReptile={isReptile}\n                isOther={isOther}\n            />\n            <button className={style.Button}>\n                <Link to={'/pets/add'}>\n                    <span>+</span>\n                </Link>\n            </button>\n            <table style={{ margin: '0 0 10% 5%' }}>\n                <tbody>{displayUsers}</tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default PetsList;\n","import React from 'react';\nimport style from './EditPet.module.css';\n\nconst editPet = (props) => {\n    // console.log('props editPet', props);\n\n    return (\n        <div>\n            <form className={style.Form} onSubmit={props.handleSubmit}>\n                <h2>Edit </h2>\n                <div className={style.Input}>\n                    <label htmlFor=\"name\">Name: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        value={props.selectedPet.name}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"specie\">Specie: &nbsp;</label>\n\n                    <select\n                        name=\"specie\"\n                        value={props.selectedPet.specie}\n                        onChange={props.handleChange}\n                    >\n                        <option value=\"\">--choose an option--</option>\n                        <option value=\"dog\">Dog</option>\n                        <option value=\"cat\">Cat</option>\n                        <option value=\"bird\">Bird</option>\n                        <option value=\"rodent\">Roden</option>\n                        <option value=\"reptile\">Reptile</option>\n                        <option value=\"other\">Other</option>\n                    </select>\n                </div>\n\n                <div className={style.Input}>\n                    <label htmlFor=\"breed\">Breed: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"breed\"\n                        name=\"breed\"\n                        value={props.selectedPet.breed}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"age\">Age: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"age\"\n                        name=\"age\"\n                        value={props.selectedPet.age}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"diagnosis\">Diagnosis: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"diagnosis\"\n                        name=\"diagnosis\"\n                        value={props.selectedPet.diagnosis}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"treatment\">Treatment: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"treatment\"\n                        name=\"treatment\"\n                        value={props.selectedPet.treatment}\n                        onChange={props.handleChange}\n                    />\n                </div>\n\n                <div className={style.buttons}>\n                    <button type=\"submit\">Update</button>\n                    <button onClick={props.toggleEditForm}>Back</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default editPet;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './PetDetails.module.css';\nimport axios from 'axios';\nimport Spinner from '../../UI/Spinner/Spinner';\nimport { updateObject, checkValidity } from '../../../utils/utility';\nimport EditPet from '../EditPet/EditPet';\n\nconst PetDetails = (props) => {\n    const [error, setError] = useState(null);\n    const [editForm, setEditForm] = useState(false);\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const [selectedPet, setSelectedPet] = useState('');\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = async () => {\n        await axios\n            .get(`/api/pets/${props.match.params.id}`)\n            .then((response) => {\n                console.log('response from DB', response.data);\n\n                setSelectedPet(\n                    updateObject({\n                        _id: response.data.pet._id,\n                        name: response.data.pet.name,\n                        specie: response.data.pet.specie,\n                        breed: response.data.pet.breed,\n                        age: response.data.pet.age,\n                        diagnosis: response.data.pet.diagnosis,\n                        treatment: response.data.pet.treatment,\n                        owner: {\n                            name: response.data.owner.name,\n                            lastName: response.data.owner.lastName,\n                            email: response.data.owner.email,\n                            address: response.data.owner.address,\n                            phoneNumber: response.data.owner.phoneNumber,\n                        },\n                    })\n                );\n\n                // setSelectedPet(updateObject((selectedPet[index], {value: response.data[index]}))\n\n                // for (let formControl in selectedPet) {\n                //     setSelectedPet({\n                //         ...selectedPet,\n                //         formControl: {\n                //             ...formControl,\n                //             value: response.data[formControl],\n                //         },\n                //     });\n                // }\n            })\n\n            .catch((err) => {\n                console.log(err.response);\n                if (err.response.status === 404) {\n                    setError({\n                        error: 'Pet not found',\n                    });\n                }\n            });\n    };\n    console.log('selectedPet', selectedPet);\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        console.log('name, value', name, value);\n\n        setSelectedPet({\n            ...selectedPet,\n            [name]: value,\n            address: {\n                [name]: value,\n            },\n        });\n\n        // const updatedFormElement = updateObject(selectedPet[inputId], {\n        //     value: event.target.value,\n        //     valid: checkValidity(\n        //         event.target.value,\n        //         selectedPet[inputId].validation\n        //     ),\n        //     touched: true, // input in the form has changed\n        // });\n        // const updatedForm = updateObject(selectedPet, {\n        //     [inputId]: updatedFormElement,\n        // });\n\n        // let validForm = true;\n        // for (let inputId in updatedForm) {\n        //     validForm = updatedForm[inputId].valid && validForm;\n        // }\n        // setSelectedPet(updatedForm);\n        // setFormIsValid(validForm);\n    };\n\n    console.log('selectedPet', selectedPet);\n\n    const toggleEditForm = () => {\n        setEditForm(() => !editForm);\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log('update');\n        axios\n            .put(`/api/pets/${selectedPet._id}`, {\n                name: selectedPet.name,\n                specie: selectedPet.specie,\n                breed: selectedPet.breed,\n                age: selectedPet.age,\n                diagnosis: selectedPet.diagnosis,\n                treatment: selectedPet.treatment,\n            })\n            .then((response) => {\n                props.history.goBack();\n\n                fetchData();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const deletePet = async () => {\n        await axios\n            .delete(`/api/pets/${selectedPet._id}`)\n            .then(() => {\n                console.log(\n                    `${selectedPet.name} ${selectedPet.lastName} was successfully removed`\n                );\n                props.history.goBack();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    if (!selectedPet) return <Spinner />;\n    return (\n        <>\n            {editForm ? (\n                <EditPet\n                    toggleEditForm={toggleEditForm}\n                    handleChange={handleChange}\n                    handleSubmit={handleSubmit}\n                    selectedPet={selectedPet}\n                />\n            ) : (\n                <div className={style.Card}>\n                    <h3>{selectedPet.name}</h3>\n                    <div className={style.Infos}>\n                        <div style={{ width: '100%' }}>\n                            <p>Specie: {selectedPet.specie}</p>\n                            <p>Breed: {selectedPet.breed}</p>\n                            <p>Age: {selectedPet.age}</p>\n                            <hr />\n                            <p>Diagnosis:</p>\n                            <p>{selectedPet.diagnosis}</p>\n                            <p>Treatment:</p>\n                            <p>{selectedPet.treatment}</p>\n                        </div>\n                        <div style={{ width: '100%', height: '50%' }}>\n                            <p>Owner: </p>\n                            <p>&nbsp; Name: {selectedPet.owner.name}</p>\n                            <p>\n                                &nbsp; Last name: {selectedPet.owner.lastName}\n                            </p>\n                            <hr />\n                            <p>\n                                &nbsp;{' '}\n                                <img\n                                    src=\"../../../../images/email-logo.png\"\n                                    alt=\"phone-logo\"\n                                    style={{\n                                        width: '1.2rem',\n                                        marginRight: '5%',\n                                    }}\n                                />{' '}\n                                {selectedPet.owner.email}\n                            </p>\n                            <p>\n                                &nbsp;{' '}\n                                <img\n                                    src=\"../../../../images/phone-logo.png\"\n                                    alt=\"phone-logo\"\n                                    style={{\n                                        width: '1.2rem',\n                                        marginRight: '5%',\n                                    }}\n                                />\n                                {selectedPet.owner.phoneNumber}\n                            </p>\n                            <hr />\n                            <p>\n                                &nbsp; Street:{' '}\n                                {selectedPet.owner.address.street}\n                            </p>\n                            <p>&nbsp; City: {selectedPet.owner.address.city}</p>\n                            <p>\n                                &nbsp; ZIP code:{' '}\n                                {selectedPet.owner.address.zipCode}\n                            </p>\n                            <p>\n                                &nbsp; State: {selectedPet.owner.address.state}\n                            </p>\n                        </div>\n                    </div>\n                    <div className={style.buttons}>\n                        <div>\n                            <button onClick={() => props.history.goBack()}>\n                                Back\n                            </button>\n                        </div>\n                        <div style={{ display: 'flex', marginRight: '5%' }}>\n                            <button onClick={toggleEditForm}>Edit</button>\n                            <button onClick={deletePet}>Delete</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default PetDetails;\n","import './App.css';\nimport { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './Components/Home/Home';\nimport Signup from './Components/Auth/Signup/Signup';\nimport Navbar from './Components/Navbar/Navbar';\nimport Footer from './Components/Footer/Footer';\nimport UsersList from './Components/Users/UsersList/UsersList';\nimport UserDetails from './Components/Users/UserDetails/UserDetails';\nimport AddUser from './Components/Users/AddUser/AddUser';\nimport AddPet from './Components/Pets/AddPet/AddPet';\nimport PetsList from './Components/Pets/PetsList/PetsList';\nimport PetDetails from './Components/Pets/PetDetails/PetDetails';\n\nfunction App(props) {\n    const [user, setUser] = useState(props.user || '');\n\n    console.log('user', user);\n\n    let isEmployee = false;\n    {\n        user.role === 'employee' && (isEmployee = true);\n    }\n\n    return (\n        <div className=\"App\">\n            <Route\n                render={(props) => (\n                    <Navbar\n                        {...props}\n                        isEmployee={isEmployee}\n                        setUser={setUser}\n                        user={user}\n                    />\n                )}\n            />\n            <Switch>\n                <Route\n                    exact\n                    path=\"/\"\n                    render={(props) => <Home {...props} user={user} />}\n                />\n                <Route\n                    exact\n                    path=\"/signup\"\n                    render={(props) => <Signup {...props} setUser={setUser} />}\n                />\n                <Route exact path=\"/users\" component={UsersList} />\n                <Route\n                    exact\n                    path=\"/users/add\"\n                    render={(props) => <AddUser {...props} />}\n                />\n                <Route\n                    exact\n                    path=\"/users/:id\"\n                    render={(props) => (\n                        <UserDetails\n                            {...props}\n                            isEmployee={isEmployee}\n                            selectedUser={user}\n                        />\n                    )}\n                />\n\n                <Route\n                    exact\n                    path=\"/pets/add\"\n                    render={(props) => (\n                        <AddPet\n                            {...props}\n                            isEmployee={isEmployee}\n                            user={user}\n                        />\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/users/:id/pet\"\n                    render={(props) => <AddPet {...props} />}\n                />\n                <Route exact path=\"/pets\" component={PetsList} />\n                <Route exact path=\"/pets/:id\" component={PetDetails} />\n            </Switch>\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport axios from 'axios';\n\naxios\n    .get('/api/auth/loggedin')\n    .then((response) => {\n        const user = response.data;\n        ReactDOM.render(\n            <BrowserRouter>\n                <App user={user} />\n            </BrowserRouter>,\n            document.getElementById('root')\n        );\n    })\n    .catch((err) => {\n        console.log(err);\n    });\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"EditUser_Form__lkfFK\",\"Input\":\"EditUser_Input__2LzE-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"EditPet_Form__2oJl5\",\"Input\":\"EditPet_Input__1NSqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"GenInfos_Container__1au5F\",\"Box\":\"GenInfos_Box__PLQvg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"UserDetails_Card__HQ1WF\",\"Infos\":\"UserDetails_Infos__3ej3a\",\"buttons\":\"UserDetails_buttons__1xvsu\",\"AddButton\":\"UserDetails_AddButton__1IjRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3cBI6\",\"Label\":\"Input_Label__1v3Uc\",\"InputElement\":\"Input_InputElement__3rTLZ\",\"Invalid\":\"Input_Invalid__3Dkzu\",\"Textarea\":\"Input_Textarea__2AiBU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Map_Container__185qC\",\"infos\":\"Map_infos__3TZAA\",\"Map\":\"Map_Map__2e5MI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"UserList_Container__3e04F\",\"resultCard\":\"UserList_resultCard__1z-Gj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PetsList_Container__2RD_v\",\"resultCard\":\"PetsList_resultCard__30Eix\",\"Button\":\"PetsList_Button__cvohk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"PetDetails_Card__RdALo\",\"Infos\":\"PetDetails_Infos__2ilSc\",\"buttons\":\"PetDetails_buttons__11ne8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"EmergencyForm_Form__2rrPk\",\"Button\":\"EmergencyForm_Button__8bLtR\",\"buttons\":\"EmergencyForm_buttons__22s7h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Signup_Form__8QMrr\",\"Button\":\"Signup_Button__15QTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__2hRdE\",\"Button\":\"Navbar_Button__1zRXy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Login_Button__2pbIP\",\"Form\":\"Login_Form__OiCHT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"AddUser_Form__3-O1P\",\"Button\":\"AddUser_Button__1q-zJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"AddPet_Form__3ykWl\",\"Button\":\"AddPet_Button__3ZfPF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__13bqR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Carousel\":\"Carousel_Carousel__2ZI-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__IrRCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Filters_Container__2qZUz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2C0iS\",\"load4\":\"Spinner_load4__2DS-6\"};"],"sourceRoot":""}